-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- --------------------------------------------------------------------------------
-- Tool Version: Vivado v.2024.2 (win64) Build 5239630 Fri Nov 08 22:35:27 MST 2024
-- Date        : Sun Mar 30 17:28:47 2025
-- Host        : Diogenes_Urn running 64-bit major release  (build 9200)
-- Command     : write_vhdl -force -mode funcsim
--               c:/Dev/masters_project/fp_gpu/fp_gpu.gen/sources_1/bd/fp_gpu/ip/fp_gpu_gpu_controller_0_0/fp_gpu_gpu_controller_0_0_sim_netlist.vhdl
-- Design      : fp_gpu_gpu_controller_0_0
-- Purpose     : This VHDL netlist is a functional simulation representation of the design and should not be modified or
--               synthesized. This netlist cannot be used for SDF annotated simulation.
-- Device      : xc7z020clg400-1
-- --------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity fp_gpu_gpu_controller_0_0 is
  port (
    clk : in STD_LOGIC;
    rst_n : in STD_LOGIC;
    new_screen_size : out STD_LOGIC;
    new_projection_matrix : out STD_LOGIC;
    new_clear_color : out STD_LOGIC;
    new_camera_position : out STD_LOGIC;
    new_camera_rotation : out STD_LOGIC;
    new_model_position : out STD_LOGIC;
    new_model_rotation : out STD_LOGIC;
    new_model_scale : out STD_LOGIC;
    new_mesh_data : out STD_LOGIC;
    model_should_render : out STD_LOGIC;
    clear_frame : out STD_LOGIC;
    screen_size_processed : in STD_LOGIC;
    projection_matrix_processed : in STD_LOGIC;
    clear_color_processed : in STD_LOGIC;
    camera_position_processed : in STD_LOGIC;
    camera_rotation_processed : in STD_LOGIC;
    model_position_processed : in STD_LOGIC;
    model_rotation_processed : in STD_LOGIC;
    model_scale_processed : in STD_LOGIC;
    mesh_data_processed : in STD_LOGIC;
    model_rendered : in STD_LOGIC;
    frame_cleared : in STD_LOGIC;
    m_axi_hpr_arvalid : out STD_LOGIC;
    m_axi_hpr_arready : in STD_LOGIC;
    m_axi_hpr_araddr : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_hpr_arburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_hpr_arsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_hpr_arlen : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_hpr_rvalid : in STD_LOGIC;
    m_axi_hpr_rready : out STD_LOGIC;
    m_axi_hpr_rdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_hpr_rlast : in STD_LOGIC;
    m_axi_hpw_awvalid : out STD_LOGIC;
    m_axi_hpw_awready : in STD_LOGIC;
    m_axi_hpw_awaddr : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_hpw_awburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_hpw_awsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_hpw_awlen : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_hpw_wvalid : out STD_LOGIC;
    m_axi_hpw_wready : in STD_LOGIC;
    m_axi_hpw_wdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_hpw_wstrb : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_hpw_wlast : out STD_LOGIC;
    m_axi_hpw_bvalid : in STD_LOGIC;
    m_axi_hpw_bready : out STD_LOGIC
  );
  attribute NotValidForBitStream : boolean;
  attribute NotValidForBitStream of fp_gpu_gpu_controller_0_0 : entity is true;
  attribute CHECK_LICENSE_TYPE : string;
  attribute CHECK_LICENSE_TYPE of fp_gpu_gpu_controller_0_0 : entity is "fp_gpu_gpu_controller_0_0,gpu_controller,{}";
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of fp_gpu_gpu_controller_0_0 : entity is "yes";
  attribute IP_DEFINITION_SOURCE : string;
  attribute IP_DEFINITION_SOURCE of fp_gpu_gpu_controller_0_0 : entity is "module_ref";
  attribute X_CORE_INFO : string;
  attribute X_CORE_INFO of fp_gpu_gpu_controller_0_0 : entity is "gpu_controller,Vivado 2024.2";
end fp_gpu_gpu_controller_0_0;

architecture STRUCTURE of fp_gpu_gpu_controller_0_0 is
  signal \<const0>\ : STD_LOGIC;
  attribute X_INTERFACE_INFO : string;
  attribute X_INTERFACE_INFO of clk : signal is "xilinx.com:signal:clock:1.0 clk CLK";
  attribute X_INTERFACE_MODE : string;
  attribute X_INTERFACE_MODE of clk : signal is "slave";
  attribute X_INTERFACE_PARAMETER : string;
  attribute X_INTERFACE_PARAMETER of clk : signal is "XIL_INTERFACENAME clk, ASSOCIATED_BUSIF m_axi_hpr:m_axi_hpw, FREQ_HZ 100000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN fp_gpu_processing_system7_0_0_FCLK_CLK0, INSERT_VIP 0";
  attribute X_INTERFACE_INFO of m_axi_hpr_arready : signal is "xilinx.com:interface:aximm:1.0 m_axi_hpr ARREADY";
  attribute X_INTERFACE_INFO of m_axi_hpr_arvalid : signal is "xilinx.com:interface:aximm:1.0 m_axi_hpr ARVALID";
  attribute X_INTERFACE_MODE of m_axi_hpr_arvalid : signal is "master";
  attribute X_INTERFACE_PARAMETER of m_axi_hpr_arvalid : signal is "XIL_INTERFACENAME m_axi_hpr, DATA_WIDTH 32, PROTOCOL AXI3, FREQ_HZ 100000000, ID_WIDTH 0, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_ONLY, HAS_BURST 1, HAS_LOCK 0, HAS_PROT 0, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 0, HAS_BRESP 0, HAS_RRESP 0, SUPPORTS_NARROW_BURST 1, NUM_READ_OUTSTANDING 2, NUM_WRITE_OUTSTANDING 2, MAX_BURST_LENGTH 16, PHASE 0.0, CLK_DOMAIN fp_gpu_processing_system7_0_0_FCLK_CLK0, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0";
  attribute X_INTERFACE_INFO of m_axi_hpr_rlast : signal is "xilinx.com:interface:aximm:1.0 m_axi_hpr RLAST";
  attribute X_INTERFACE_INFO of m_axi_hpr_rready : signal is "xilinx.com:interface:aximm:1.0 m_axi_hpr RREADY";
  attribute X_INTERFACE_INFO of m_axi_hpr_rvalid : signal is "xilinx.com:interface:aximm:1.0 m_axi_hpr RVALID";
  attribute X_INTERFACE_INFO of m_axi_hpw_awready : signal is "xilinx.com:interface:aximm:1.0 m_axi_hpw AWREADY";
  attribute X_INTERFACE_INFO of m_axi_hpw_awvalid : signal is "xilinx.com:interface:aximm:1.0 m_axi_hpw AWVALID";
  attribute X_INTERFACE_MODE of m_axi_hpw_awvalid : signal is "master";
  attribute X_INTERFACE_PARAMETER of m_axi_hpw_awvalid : signal is "XIL_INTERFACENAME m_axi_hpw, DATA_WIDTH 32, PROTOCOL AXI3, FREQ_HZ 100000000, ID_WIDTH 0, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE WRITE_ONLY, HAS_BURST 1, HAS_LOCK 0, HAS_PROT 0, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 0, HAS_RRESP 0, SUPPORTS_NARROW_BURST 1, NUM_READ_OUTSTANDING 2, NUM_WRITE_OUTSTANDING 2, MAX_BURST_LENGTH 16, PHASE 0.0, CLK_DOMAIN fp_gpu_processing_system7_0_0_FCLK_CLK0, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0";
  attribute X_INTERFACE_INFO of m_axi_hpw_bready : signal is "xilinx.com:interface:aximm:1.0 m_axi_hpw BREADY";
  attribute X_INTERFACE_INFO of m_axi_hpw_bvalid : signal is "xilinx.com:interface:aximm:1.0 m_axi_hpw BVALID";
  attribute X_INTERFACE_INFO of m_axi_hpw_wlast : signal is "xilinx.com:interface:aximm:1.0 m_axi_hpw WLAST";
  attribute X_INTERFACE_INFO of m_axi_hpw_wready : signal is "xilinx.com:interface:aximm:1.0 m_axi_hpw WREADY";
  attribute X_INTERFACE_INFO of m_axi_hpw_wvalid : signal is "xilinx.com:interface:aximm:1.0 m_axi_hpw WVALID";
  attribute X_INTERFACE_INFO of rst_n : signal is "xilinx.com:signal:reset:1.0 rst_n RST";
  attribute X_INTERFACE_MODE of rst_n : signal is "slave";
  attribute X_INTERFACE_PARAMETER of rst_n : signal is "XIL_INTERFACENAME rst_n, POLARITY ACTIVE_LOW, INSERT_VIP 0";
  attribute X_INTERFACE_INFO of m_axi_hpr_araddr : signal is "xilinx.com:interface:aximm:1.0 m_axi_hpr ARADDR";
  attribute X_INTERFACE_INFO of m_axi_hpr_arburst : signal is "xilinx.com:interface:aximm:1.0 m_axi_hpr ARBURST";
  attribute X_INTERFACE_INFO of m_axi_hpr_arlen : signal is "xilinx.com:interface:aximm:1.0 m_axi_hpr ARLEN";
  attribute X_INTERFACE_INFO of m_axi_hpr_arsize : signal is "xilinx.com:interface:aximm:1.0 m_axi_hpr ARSIZE";
  attribute X_INTERFACE_INFO of m_axi_hpr_rdata : signal is "xilinx.com:interface:aximm:1.0 m_axi_hpr RDATA";
  attribute X_INTERFACE_INFO of m_axi_hpw_awaddr : signal is "xilinx.com:interface:aximm:1.0 m_axi_hpw AWADDR";
  attribute X_INTERFACE_INFO of m_axi_hpw_awburst : signal is "xilinx.com:interface:aximm:1.0 m_axi_hpw AWBURST";
  attribute X_INTERFACE_INFO of m_axi_hpw_awlen : signal is "xilinx.com:interface:aximm:1.0 m_axi_hpw AWLEN";
  attribute X_INTERFACE_INFO of m_axi_hpw_awsize : signal is "xilinx.com:interface:aximm:1.0 m_axi_hpw AWSIZE";
  attribute X_INTERFACE_INFO of m_axi_hpw_wdata : signal is "xilinx.com:interface:aximm:1.0 m_axi_hpw WDATA";
  attribute X_INTERFACE_INFO of m_axi_hpw_wstrb : signal is "xilinx.com:interface:aximm:1.0 m_axi_hpw WSTRB";
begin
  clear_frame <= \<const0>\;
  m_axi_hpr_araddr(31) <= \<const0>\;
  m_axi_hpr_araddr(30) <= \<const0>\;
  m_axi_hpr_araddr(29) <= \<const0>\;
  m_axi_hpr_araddr(28) <= \<const0>\;
  m_axi_hpr_araddr(27) <= \<const0>\;
  m_axi_hpr_araddr(26) <= \<const0>\;
  m_axi_hpr_araddr(25) <= \<const0>\;
  m_axi_hpr_araddr(24) <= \<const0>\;
  m_axi_hpr_araddr(23) <= \<const0>\;
  m_axi_hpr_araddr(22) <= \<const0>\;
  m_axi_hpr_araddr(21) <= \<const0>\;
  m_axi_hpr_araddr(20) <= \<const0>\;
  m_axi_hpr_araddr(19) <= \<const0>\;
  m_axi_hpr_araddr(18) <= \<const0>\;
  m_axi_hpr_araddr(17) <= \<const0>\;
  m_axi_hpr_araddr(16) <= \<const0>\;
  m_axi_hpr_araddr(15) <= \<const0>\;
  m_axi_hpr_araddr(14) <= \<const0>\;
  m_axi_hpr_araddr(13) <= \<const0>\;
  m_axi_hpr_araddr(12) <= \<const0>\;
  m_axi_hpr_araddr(11) <= \<const0>\;
  m_axi_hpr_araddr(10) <= \<const0>\;
  m_axi_hpr_araddr(9) <= \<const0>\;
  m_axi_hpr_araddr(8) <= \<const0>\;
  m_axi_hpr_araddr(7) <= \<const0>\;
  m_axi_hpr_araddr(6) <= \<const0>\;
  m_axi_hpr_araddr(5) <= \<const0>\;
  m_axi_hpr_araddr(4) <= \<const0>\;
  m_axi_hpr_araddr(3) <= \<const0>\;
  m_axi_hpr_araddr(2) <= \<const0>\;
  m_axi_hpr_araddr(1) <= \<const0>\;
  m_axi_hpr_araddr(0) <= \<const0>\;
  m_axi_hpr_arburst(1) <= \<const0>\;
  m_axi_hpr_arburst(0) <= \<const0>\;
  m_axi_hpr_arlen(3) <= \<const0>\;
  m_axi_hpr_arlen(2) <= \<const0>\;
  m_axi_hpr_arlen(1) <= \<const0>\;
  m_axi_hpr_arlen(0) <= \<const0>\;
  m_axi_hpr_arsize(2) <= \<const0>\;
  m_axi_hpr_arsize(1) <= \<const0>\;
  m_axi_hpr_arsize(0) <= \<const0>\;
  m_axi_hpr_arvalid <= \<const0>\;
  m_axi_hpr_rready <= \<const0>\;
  m_axi_hpw_awaddr(31) <= \<const0>\;
  m_axi_hpw_awaddr(30) <= \<const0>\;
  m_axi_hpw_awaddr(29) <= \<const0>\;
  m_axi_hpw_awaddr(28) <= \<const0>\;
  m_axi_hpw_awaddr(27) <= \<const0>\;
  m_axi_hpw_awaddr(26) <= \<const0>\;
  m_axi_hpw_awaddr(25) <= \<const0>\;
  m_axi_hpw_awaddr(24) <= \<const0>\;
  m_axi_hpw_awaddr(23) <= \<const0>\;
  m_axi_hpw_awaddr(22) <= \<const0>\;
  m_axi_hpw_awaddr(21) <= \<const0>\;
  m_axi_hpw_awaddr(20) <= \<const0>\;
  m_axi_hpw_awaddr(19) <= \<const0>\;
  m_axi_hpw_awaddr(18) <= \<const0>\;
  m_axi_hpw_awaddr(17) <= \<const0>\;
  m_axi_hpw_awaddr(16) <= \<const0>\;
  m_axi_hpw_awaddr(15) <= \<const0>\;
  m_axi_hpw_awaddr(14) <= \<const0>\;
  m_axi_hpw_awaddr(13) <= \<const0>\;
  m_axi_hpw_awaddr(12) <= \<const0>\;
  m_axi_hpw_awaddr(11) <= \<const0>\;
  m_axi_hpw_awaddr(10) <= \<const0>\;
  m_axi_hpw_awaddr(9) <= \<const0>\;
  m_axi_hpw_awaddr(8) <= \<const0>\;
  m_axi_hpw_awaddr(7) <= \<const0>\;
  m_axi_hpw_awaddr(6) <= \<const0>\;
  m_axi_hpw_awaddr(5) <= \<const0>\;
  m_axi_hpw_awaddr(4) <= \<const0>\;
  m_axi_hpw_awaddr(3) <= \<const0>\;
  m_axi_hpw_awaddr(2) <= \<const0>\;
  m_axi_hpw_awaddr(1) <= \<const0>\;
  m_axi_hpw_awaddr(0) <= \<const0>\;
  m_axi_hpw_awburst(1) <= \<const0>\;
  m_axi_hpw_awburst(0) <= \<const0>\;
  m_axi_hpw_awlen(3) <= \<const0>\;
  m_axi_hpw_awlen(2) <= \<const0>\;
  m_axi_hpw_awlen(1) <= \<const0>\;
  m_axi_hpw_awlen(0) <= \<const0>\;
  m_axi_hpw_awsize(2) <= \<const0>\;
  m_axi_hpw_awsize(1) <= \<const0>\;
  m_axi_hpw_awsize(0) <= \<const0>\;
  m_axi_hpw_awvalid <= \<const0>\;
  m_axi_hpw_bready <= \<const0>\;
  m_axi_hpw_wdata(31) <= \<const0>\;
  m_axi_hpw_wdata(30) <= \<const0>\;
  m_axi_hpw_wdata(29) <= \<const0>\;
  m_axi_hpw_wdata(28) <= \<const0>\;
  m_axi_hpw_wdata(27) <= \<const0>\;
  m_axi_hpw_wdata(26) <= \<const0>\;
  m_axi_hpw_wdata(25) <= \<const0>\;
  m_axi_hpw_wdata(24) <= \<const0>\;
  m_axi_hpw_wdata(23) <= \<const0>\;
  m_axi_hpw_wdata(22) <= \<const0>\;
  m_axi_hpw_wdata(21) <= \<const0>\;
  m_axi_hpw_wdata(20) <= \<const0>\;
  m_axi_hpw_wdata(19) <= \<const0>\;
  m_axi_hpw_wdata(18) <= \<const0>\;
  m_axi_hpw_wdata(17) <= \<const0>\;
  m_axi_hpw_wdata(16) <= \<const0>\;
  m_axi_hpw_wdata(15) <= \<const0>\;
  m_axi_hpw_wdata(14) <= \<const0>\;
  m_axi_hpw_wdata(13) <= \<const0>\;
  m_axi_hpw_wdata(12) <= \<const0>\;
  m_axi_hpw_wdata(11) <= \<const0>\;
  m_axi_hpw_wdata(10) <= \<const0>\;
  m_axi_hpw_wdata(9) <= \<const0>\;
  m_axi_hpw_wdata(8) <= \<const0>\;
  m_axi_hpw_wdata(7) <= \<const0>\;
  m_axi_hpw_wdata(6) <= \<const0>\;
  m_axi_hpw_wdata(5) <= \<const0>\;
  m_axi_hpw_wdata(4) <= \<const0>\;
  m_axi_hpw_wdata(3) <= \<const0>\;
  m_axi_hpw_wdata(2) <= \<const0>\;
  m_axi_hpw_wdata(1) <= \<const0>\;
  m_axi_hpw_wdata(0) <= \<const0>\;
  m_axi_hpw_wlast <= \<const0>\;
  m_axi_hpw_wstrb(3) <= \<const0>\;
  m_axi_hpw_wstrb(2) <= \<const0>\;
  m_axi_hpw_wstrb(1) <= \<const0>\;
  m_axi_hpw_wstrb(0) <= \<const0>\;
  m_axi_hpw_wvalid <= \<const0>\;
  model_should_render <= \<const0>\;
  new_camera_position <= \<const0>\;
  new_camera_rotation <= \<const0>\;
  new_clear_color <= \<const0>\;
  new_mesh_data <= \<const0>\;
  new_model_position <= \<const0>\;
  new_model_rotation <= \<const0>\;
  new_model_scale <= \<const0>\;
  new_projection_matrix <= \<const0>\;
  new_screen_size <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
